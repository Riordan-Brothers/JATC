#DEFAULT_VOLATILE

#ENABLE_STACK_CHECKING

#ENABLE_TRACE

#ENCODING_ASCII

#INCLUDEPATH "..\\AVProEdge_MXNet_10G\\SimplSharp\\AVProEdge_MXNet_10G\\bin\\debug"
#USER_SIMPLSHARP_LIBRARY "libAVProEdge_MXNet_10G_1.6.14"
#define_constant MAX_OUTPUTS  200

string_input SERIAL_TX[MAX_OUTPUTS][255];
string_input SERIAL_RX[MAX_OUTPUTS][255];

string_output SERIAL_TX_RS232_RESPONSE[MAX_OUTPUTS];
string_output SERIAL_RX_RS232_RESPONSE[MAX_OUTPUTS];

/*******************************************************************************************
Parameters
*******************************************************************************************/


/*******************************************************************************************
  Global Variables
  (Uncomment and declare global variables as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: myString = "";
*******************************************************************************************/
SimplSharpHelper mySimplSharpHelper;
/*******************************************************************************************
  Functions
  (Add any additional functions here)
  Note:  Functions must be physically placed before the location in
         the code that calls them.
*******************************************************************************************/
threadsafe change SERIAL_TX
{
	integer i;
	i = getlastmodifiedarrayindex();
	mySimplSharpHelper.SendData( "IN", i , SERIAL_TX[i]);
}

threadsafe change SERIAL_RX
{
	integer i;
	i = getlastmodifiedarrayindex();
	mySimplSharpHelper.SendData( "OUT", i , SERIAL_RX[i]);
}

Function Init()
{
	RegisterEvent(mySimplSharpHelper, DataToSend, DataToSendFB);
}

eventhandler DataToSendFB(SimplSharpHelper sender, SerialDataEventArgs args)
{
	string sendValue[254];
	Integer i;
	
	For (i=0 to args.RawDataLen - 1 )
	{
		sendValue = sendValue + chr(args.RawData[i]);
	}
	
	if(len(sendValue) > 0)
	{
		if (args.Direction = "IN")
		{
			SERIAL_TX_RS232_RESPONSE[args.Id] = sendValue;
		}
		else
		{
			SERIAL_RX_RS232_RESPONSE[args.Id] = sendValue;
		}
	}
}


/*******************************************************************************************
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
*******************************************************************************************/

Function Main()
{
	WaitForInitializationComplete();
	Init();
}
